[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Yaşam Bilimlerinde Veri Analizi",
    "section": "",
    "text": "Önsöz\nMerhabalar! Mersin Üniversitesi Biyoteknoloji bölümü 2022 - 2023 Bahar döneminde verdiğim Veri Analizi ve İstatistiksel Öğrenme isimli dersleri ile ilgili en güncel bilgileri bu sayfa üzerinden paylaşacağım.\nBu internet sitesi aslında 2020 - 2022 yılında verilen dersler süresince oluşturulan kaynakları temel almaktadır.\nEski siteye buradan ulaşabilirsiniz\nDersler sürekli güncellenmektedir, dolayısıyla dönemin sonuna doğru eski site kullanımdan kaldırılacaktır. Ancak şu an için dersin internet sitesini sürekli takip etmeniz iyi olacaktır."
  },
  {
    "objectID": "index.html#dersin-işlenme-şekli",
    "href": "index.html#dersin-işlenme-şekli",
    "title": "Yaşam Bilimlerinde Veri Analizi",
    "section": "Dersin işlenme şekli",
    "text": "Dersin işlenme şekli\nDersimiz, ikinci bir duyuruya kadar çevrimiçi olarak işlenecektir. Çevrimiçi dersler, Microsoft Teams platformu üzerinden verilecektir. Mersin Üniversitesi öğrencileri, öğrenci e-posta adresleri ile, Teams platformuna girerek derslere ulaşabilirlirler.\nDers videoları da yine Teams platformu üzerinden tekrar izlenmeye açık olacaktır.\nBiyoteknoloji Bölümü Discord sunucusu ise temel haberleşme noktamız olacaktır. Derslerle ilgili bütün soruları sunucuda cevaplayacağım. Dolayısıyla platforma üye olmanızı tavsiye edilir."
  },
  {
    "objectID": "index.html#katkıda-bulunan-yazarlar",
    "href": "index.html#katkıda-bulunan-yazarlar",
    "title": "Yaşam Bilimlerinde Veri Analizi",
    "section": "Katkıda bulunan yazarlar",
    "text": "Katkıda bulunan yazarlar\nBu ders aynı zamanda öğrencilerden gelen katkılara açıktır. Şu ana kadar katkıda bulunan yazarlar aşağıda alfabetik olarak sıralanmıştır:\n\nAnıl Yalçıner\nMerve Akküp\nTanya Beril Korkmaz\n\nEğer siz de katkı sunmak isterseniz, bir sonraki kısmında yazılanları inceleyebilirsiniz."
  },
  {
    "objectID": "index.html#bu-siteyi-nasıl-takip-etmeniz-gerek",
    "href": "index.html#bu-siteyi-nasıl-takip-etmeniz-gerek",
    "title": "Yaşam Bilimlerinde Veri Analizi",
    "section": "Bu siteyi nasıl takip etmeniz gerek?",
    "text": "Bu siteyi nasıl takip etmeniz gerek?\nKitap kapsamında altı farklı bölüm olması planlanmıştır:\nEğer bu dersi ilk defa alıyorsanız, ilk olarak Derse Hazırlık kısmını inceleyerek kullanılacak sistemlerin kurulumu hakkında bilgi alabilirsiniz. Derslere başlamadan önce, bu kısmı bitirmiş olduğunuzdan emin olun. Yoksa ilerleyen adımlarda sorunlarla karşılaşabilirsiniz.\nBölüm 1 R ve Rstüdyo programlarının kurulumu hakkında bilgileri içermektedir. Ardından Bölüm 2 ise, R ve RStudio ile çalışırken dikkat edilmesi gereken noktaları içermektedir. Burada yazan küçük ayıntılara dikkat ederseniz, gereksiz bir şekilde yaşayacağınız vakit kaybının önüne geçebilirsiniz. Bölüm 3, R ve Rstudio programları ile çalışmaya başlamanız için gerekli bilgileri anlatmaktdır. Bölüm 4’de, kullandığınız işletim sistemindeki klasör organizasyonu hakkında fikir alabilirsiniz.\nVeri analizi kısmında genel olarak R ve Rstüdyo programlarının kullanımı, ggplot2 paketi ile görselleşirme, temel istatistik testler (t-testi), ve doğrusal modeller işlenecektir. Bölüm 5, veri analizine giriş hakkında bilgi alabilirsiniz. Bölüm 6 ise, bilimsel yöntem hakkında bilgi vermeyi amaçlamıştır. Ardından Bölüm 7 ve Bölüm 8’de ise R ve Rstudio kullanmaya başlayacağız.\nBilgisayarlı düşünme kısmında ise, R ile programlama, ileri seviye görselleştirme ve veri analiz yöntemleri, ve ileri seviye doğrusal modeller işlenecektir.\nPratik kısmında, bu iki derse ait pratikler olacaktır. Aynı zamanda bu pratiklerin, çözümleri de Ekler kısmında verilecektir.\nUygulamalar kısmında, tüm ders kapsamında işlenen konuların, biyolojik veriler üzerinden uygulaması yapılacaktır. Şu an için RNA dizileme ve mikrodizin verisi analizi üzerine pratikler bulunmaktadır.\nSon olarak, Türkiye’nin verisi kısmında ise, Türkiye sınırları içerisinde elde edilmiş açık kaynaklı veriler hakkında uygulamalar yapılacaktır."
  },
  {
    "objectID": "index.html#önemli-noktalar",
    "href": "index.html#önemli-noktalar",
    "title": "Yaşam Bilimlerinde Veri Analizi",
    "section": "Önemli noktalar",
    "text": "Önemli noktalar\nBir çok yerde dikkat etmeniz gereken özel noktalar size belirtilecektir.\n\n\n\n\n\n\nNot\n\n\n\nEğer böyle bir uyarıya denk gelirseniz, bunu not etmeniz sizin için faydalı olabilir.\n\n\n\n\n\n\n\n\nİpucu\n\n\n\nR üzerinde bir işi yapmanın birden fazla yolu bulunmaktadır. Eğer böyle bir uyarıya denk gelirseniz, alternatif bir yol izleyebilirsiniz.\n\n\n\n\n\n\n\n\nÖnemli\n\n\n\nBurada yazan bilgiler, o işin gerçekleştirilmesi için önem arz etmektedir.\n\n\n\n\n\n\n\n\nDikkat!\n\n\n\nEğer bu kutududaki bilgilere dikkat etmezseniz, bir hatayla karşılaşmanız oldukça yüksektir."
  },
  {
    "objectID": "CONTRIBUTING.html#hangi-konularda-katkı-sağlayabilirim",
    "href": "CONTRIBUTING.html#hangi-konularda-katkı-sağlayabilirim",
    "title": "Katkı Sunma",
    "section": "Hangi konularda katkı sağlayabilirim?",
    "text": "Hangi konularda katkı sağlayabilirim?\nİki temel konu üzerinde katkı sağlayabilirsiniz:\nŞu anda benim odağım dersleri hazırlayıp eklemek. Bu yüzden derslerde bulunabilecek imla hatalarını düzeltmeye fazla vakit ayıramıyorum. Bu noktaların belirtilmesi güzel bir katkı olur şu an için.\nBunun dışında ders materyal hazırlama ekibi olarak da katkıda bulunabilirsiniz. Bazı dersleri, kaynak olmadan doğaçlama bir şekilde anlattığım da oluyor. Bu durumda, anlattığım dersin materyalini hazırlama görevi üstlenebilirsiniz."
  },
  {
    "objectID": "CONTRIBUTING.html#nasıl-katkı-sağlarım",
    "href": "CONTRIBUTING.html#nasıl-katkı-sağlarım",
    "title": "Katkı Sunma",
    "section": "Nasıl katkı sağlarım?",
    "text": "Nasıl katkı sağlarım?\nEn basit şekilde katkı sağlamak isterseniz, derslerde görüğünüz hataları Issues kısmında belirtebilirsiniz. İş yoğunluğuma bağlı olarak en kısa zamanda sorunları çözmeye çalışacağım.\nEğer daha aktif bir şekilde katılım sağlamak isterseniz bu depoyu çatallayabilir (fork) ve yapacağınız katkıları birleştirme isteği (pull request) göndererek benimle paylaşabilirsiniz. Bu noktada bilmeniz gereken bir kaç nokta var:\nBu depoda iki tane dal bulunmaktadır:\n\nmain: Derslerin kaynak kodlarının bulunduğu dal. Bu dal üzerindeki metinler, Rmd, md, veya qmd formatlarında hazırlanmıştır. Bu dosyaları R üzerinde düzenleyerek katkıda bulunabilirsiniz.\ngh-pages: İnternet sitesinini oluşturan markdown ve derslerin derlenmiş html dosyalarının bulunduğu dal.\n\nDersler ile ilgili doğrudan katkılarınızı (genel olarak Rmd dökümanları ekleme ya da varolan dökümanları değiştirme) main dalında gerçekleştiriniz. Bu dökümanları daha sonra otomatik olarak html formatına dönüştürülerek, gh-pages dalına aktarılacaktır.\nDersime gösterdiğiniz ilgi için teşekkürler!"
  },
  {
    "objectID": "01-kurulum/01-r-rstudio-kurulum.html#posit-cloud",
    "href": "01-kurulum/01-r-rstudio-kurulum.html#posit-cloud",
    "title": "1  R ve RStudio",
    "section": "1.1 Posit Cloud",
    "text": "1.1 Posit Cloud\nEğer bu yolu tercih ederseniz, sadece interenete bağlanabilen bir bilgisayar rahatlıkla işinizi görecektir. İlk başta bu yöntemi tercih edebilirsiniz, ancak bu sistem size kısıtlı bir ücretsiz kullanım hakkı vermektedir. Posit cloud platformunda bir hesap açarsanız, ayda 25 işlem saati boyunca RStudio üzerinde çalışma hakkınız bulunmaktadır. Aylık 25 işlemci saatini aşarsanız, ya ücret ödemeniz gerekir, ya da bir sonraki ayı beklemeniz gerekmektedir.\n\n\n\n\n\n\nİşlemci saati\n\n\n\nBu terim, bir ay boyunca size tanınan işlemci kullanarak yapılan hesaplama hakkını belirtir. Ya da toplam kod çalıştırma hakkınız. Eğer hesaplama yapmıyorsanız, bu işlemci saatlerinizi kullanmazsınız.\n\n\n\n1.1.1 Posit Cloud sistemine giriş\nİlk olarak Posit cloud sitesine gidelim ve Sign Up tuşuna tıklayarak yeni bir hesap açalım. Eğer hesabımız var ise, Login tuşuna basarak hesabımıza giriş yapalım (Şekil 1.1).\n\n\n\nŞekil 1.1: Posit Cloud sitesi üzerinden yeni bir hesap açalım\n\n\nArından, New Project tuşuna basalım ve New RStudio Project tuşuna basarak yeni bir R projesi oluşturalım (Şekil 1.2).\n\n\n\nŞekil 1.2: Yeni bir proje oluşturalım\n\n\nEğer her şey yolunda gittiyse, yeni bir R proje ekranı ile karşılaşmamız gerekir (Şekil 1.3)\n\n\n\nŞekil 1.3: Projemizi oluşturduktan sonra karşımıza çıkan ekran\n\n\nTebrikler, Posit Cloud sistemi ile R ve RStudio kullanmaya hazırsınız artık!"
  },
  {
    "objectID": "01-kurulum/01-r-rstudio-kurulum.html#r-ve-rstudio-kurulumu",
    "href": "01-kurulum/01-r-rstudio-kurulum.html#r-ve-rstudio-kurulumu",
    "title": "1  R ve RStudio",
    "section": "1.2 R ve RStudio kurulumu",
    "text": "1.2 R ve RStudio kurulumu\nEğer bilgisayarınza R ve Rstudio kurmak isterseniz - ki bu yöntem uzun vadede tavsiye edilir - bu yoldan gitmelisiniz. Bunun için öncelikle bilgisayarınızın mimarisini öğrenmeniz gereklidir. En güncel işlemci mimarisi 64 bit şu anda, ancak hala 32 bit bilgisayarlar dolaşımda bulunmakta. İşlemci mimarinize uygun R ve RStudio programlarını indirmeniz gereklidir.\nÖncelikle R istastik paketini kurmalısınız, daha sonra RStudio masaüstü programını kurmanız gerekir. Sadece RStudio kurmanız yeterli değildir."
  },
  {
    "objectID": "01-kurulum/02-ilk-kurallar.html#karakter-kodlama-sorunları",
    "href": "01-kurulum/02-ilk-kurallar.html#karakter-kodlama-sorunları",
    "title": "2  Önemli Konular",
    "section": "2.1 Karakter kodlama sorunları",
    "text": "2.1 Karakter kodlama sorunları\nBilgisayarlar geliştirildiği günden beri, farklı karakter kodlama sistemleri kullanılmıştır. Hatta farklı işletim sistemleri bile birbirleriyle uyumsuz karakter kodlama sistemleri ile çalışır. Bu yüzden, bir bilgisayarda görünen karakter başka bir bilgisayarda düzgün bir şekilde görülmeyebilir.\nİlk geliştirilen kodlama sistemlerinden birisi olan ASCII sadece belirli sayıda basılı karakter içerebiliyordu. Dolayısıyla, belirli sayıda karakter kullanma imkanımız vardı ve daha çok İngilizce alfabesinde bulunan latince karakterleri destekliyordu.\nAncak ilerleyen yıllarda farklı kodlama sistemleri kullanıılmaya başlandı. Ancak ASCII karakter seti her zaman geriye doğru desteklendi. Yani, kodlama sistemleri değişse bile, ASCII karakterleri, aynı kodlarla belirtiliyordu.\nSon yıllarda UTF-8 karakter kodlama sistemi yaygın olarak kullanılmaktadır. Bu sistem sayesinde, farklı alfabelerdeki karakterler (mesela Türkçe’ye özgü karakterler) desteklenmeye başlandı.\nUTF-8, şu anda yaygın bir kodlama sistemi olsa da, Windows bu kodlama sistemini son yıllarda kullanmaya başladı ve hala bu yüzden sorunlar yaşıyoruz. Önceki yıllarda, bu kodlama sorunları yüzünden öğrenci ödevlerini düzgün bir şekilde görüntüleyemedim.\nBu yüzden, ders kapsamında yapacağınız kodlamaları sadece ASCII karakter seti üzerinden gerçekleştirin. Aslında çok kolay, aşağıdaki kutucukta bulunan harfler - ve kendi alfabenizdeki İngilizce dışındaki karakterler - YASAK!\n\n\n\n\n\n\nKullanılmaması gereken karakterler\n\n\n\nKodlama yaparken ve dosyaları isimlendirirken aşağıdaki karakterleri kullanmayınız:\nÖ, Ç, Ş, İ, Ğ, Ü, Ş, ı, ü, ş, ç, ö \nEğer sizin kullandığınız yerel dilinizde, İngilizce karakter seti dışında karakterler varsa, onları da kullanmayın!\n\n\n\n2.1.1 RStudio üzerinde karakter kodlaması\nEğer kullandığınız RStudio programında karakter kodlamasının ne olduğunu merak ediyorsanız şu yolu takip ediniz:\n\nÖnce üstteki menüden Tools (Araçlar) düğmesine tıklayınız\nAçılan menüde Global Options (Global ayarlar) düğmesini bulunuz\nAçılan sayfada Code tuşuna basınız\nArdından Saving sekmesine tıklayınız\n\nBu adımların ardından, bir sonraki şekildeki ekran karşınıza çıkmalı. Burada Default text encoding kısmına dikkat ediniz. Eğer UTF-8 yazmıyorsa, Change tuşuna basarak, UTF-8 kodlamasını bulunuz (Şekil 2.1).\n\n\n\nŞekil 2.1: RStudio üzerinde UTF-8 kodlamasının seçilmesi"
  },
  {
    "objectID": "01-kurulum/02-ilk-kurallar.html#dosya-ve-klasörlerin-isimlendirilmesi",
    "href": "01-kurulum/02-ilk-kurallar.html#dosya-ve-klasörlerin-isimlendirilmesi",
    "title": "2  Önemli Konular",
    "section": "2.2 Dosya ve klasörlerin isimlendirilmesi",
    "text": "2.2 Dosya ve klasörlerin isimlendirilmesi\nBir diğer önemli nokta ise dosyaların ve klasörlerin isimlendirilmesi. Dosya isimlerinde asla ASCII dışında karakter ve boşluk kullanmayın. Ayrıca büyük küçük harf ayrımmına dikkat ediniz.\nASCII dışındaki karakterler ve boşluk karakteri, dosya isimlerinin hatalı bir şekilde görünmesine sebep olabilir ve işlerinizi zorlaştırır.\nKomut satırı ile çalışan programlarda, boşluk karakteri özel bir anlama gelir. Eğer boşluk karakteri kullanıyorsanız, komut satırı işleyicileri yazdığınız kelimenin bittiğini düşünür ve komutunuz ona göre çalıştırır. Bu da hata yapmanıza sebep olur.\n\n\n\n\n\n\nDosya isimlerine dikkat ediniz\n\n\n\nDosya isimlerini seçerken asla ASCII dışında karakter ve boşluk kullanmayın. Boşluk kullanacağınız zaman - (tire) veya _ (alt çizgi: SHIFT + -) karakterlerini kullanabilirisniz.\n\n\nHatalı klasör ve dosya isimleri:\nveri analizi/ödev 01.Rmd\nVeri analizi/Proje/Ödev (1)(11).Rmd\nGüzel bir şekilde yazılmış klasör ve dosya isimleri:\nveri-analizi/odev_01.Rmd\nVeri_analizi/Proje/Odev_(1).Rmd\n\n2.2.1 Ondalık işareti\nTürkiye ve Avrupa’da ondalık ayracı olarak , kulanılmaktadır. Mesela:\n14,6\nAncak R programı, Amerika sistemini kullanır. Dolayısıyla ondalıklı sayılarla çalışmak istiyorsanız . işareti ile ondalık ayrımını gerçekleştirmeniz gerekir.\n\n\n\n\n\n\nOndalık ayracı farklıdır\n\n\n\nPeki kendi hazırladığınız verilerde ondalık ayracı olarak , kullanılmışsa ne olacak? İlerleyen bölümlerde, R içerisine veri yüklerken dec opsiyonu ilse ondalık ayracını seçmeyi öğreneceğiz."
  },
  {
    "objectID": "01-kurulum/02-ilk-kurallar.html#sonuç",
    "href": "01-kurulum/02-ilk-kurallar.html#sonuç",
    "title": "2  Önemli Konular",
    "section": "2.3 Sonuç",
    "text": "2.3 Sonuç\nDikkat etmeniz gereken noktalar:\n\nKodlamaları ASCII karakterleri ile yapalım\nKlasör ve dosya isimlerinde yanlızca ASCII karakter kullanalaım\nKlasör ve dosya isimlerinde boşluk karakteri kullanmayalım\nKlasör ve dosya isimlerinde büyük küçük harf ayrımına dikkat edelim"
  },
  {
    "objectID": "01-kurulum/03-r-rstudio-ilk-adimlar.html#dik-bir-öğrenme-eğrisi",
    "href": "01-kurulum/03-r-rstudio-ilk-adimlar.html#dik-bir-öğrenme-eğrisi",
    "title": "3  İlk adımlar",
    "section": "\n3.1 Dik bir öğrenme eğrisi",
    "text": "3.1 Dik bir öğrenme eğrisi\nKullanacağımız programların dik bir öğrenme eğrisi bulunmaktadır. Yani, gerçekten işe yarar bir şeyler yapabilmeniz için bir süre boyunca (3 - 4 hafta kadar) yoğun bir çalışma yapmanız ve kullan programların mantıklarını kavramanız gerekir.\nAncak bir kere bu çalışma sistemini kavradığınızda, sonraki adımlar daha kolay hale gelecektir. Mesela Şekil 3.1, anlattıklarımın bir özeti aslında. Biraz gözünüzü korkuttum kabul ediyorum…\n\n\nŞekil 3.1: Veri analizi araçlarından R ve Python programlarının öğrenme eğrisi siyah olarak gösterilmiştir.\n\n\nAncak her işe iyi tarafından bakalım. Veri analizi, yoğun bir biçimde döküman formatı değiştirme ve tekrarlı işlemler içeren bir işlemler bütünüdür. Microsoft Excel gibi bir araçlar bu analiz adımlarını ancak belli bir noktaya kadar sürdürebilirsiniz. Özellikle Bölüm 5’de belirtileceği üzere, yaşam bilimlerindeki veri miktarı artık küçük çapılı araçların altından kalkamayacağı bir seviyeye gelmiş bulunmaktadır. Bir noktadan sonra, tekrarlı işler için harcayacağınız zaman git gide artacaktır (Şekil 3.2).\n\n\nŞekil 3.2: Bu grafikte \\(x\\) ekseni yapılan veri analiz işleminin boyutunu, \\(y\\) ekseni ise o işi yapmak için gerekli zamanı göstermektedir. Kırmızı çizgi, R gibi bir programla yapılan veri analzi sürecini ifade ederken, siyah çizgi ise manuel yollarla yapılan bir işlemi göstermektedir. R ile yapılan işlemler belli bir noktaya kadar karmaşık olsa da, işin boyutu arttıkça, harcanan zaman sabit kalmaya başlamıştır.\n\n\nKafanız biraz karıştı farkediyorum. Ancak sürece güvenin. Unutmayın, hayatta önemli olan aslında süreçtir…"
  },
  {
    "objectID": "01-kurulum/03-r-rstudio-ilk-adimlar.html#genel-görünüm",
    "href": "01-kurulum/03-r-rstudio-ilk-adimlar.html#genel-görünüm",
    "title": "3  İlk adımlar",
    "section": "\n3.2 Genel görünüm",
    "text": "3.2 Genel görünüm\nEğer Bölüm 1 bölümündeki adımları tam olarak takip ettiyseniz, R ve Rstudio programlarını kurmuş olmanız gerek. Eğer programları kurmadıysanız şimdi Bölüm 1 kısmına geri dönerek, gerekli işlemleri yapınız.\nProgramları tam olarak kurduysanız, Şekil 3.3’da göreceğiniz bir ekran karşınıza çıkmalı. Gelin bu ekranı inceleyelim:\n\nPencere 1: Burada komut satırı karşınıza çıkmakta. R ile komut satırı üzerinden etkileşeceksiniz.\nPencere 2: Bu kısımda ise iki temel sekme var:\n\n\nEnvironment (Çevre): Bu sekmede, R üzerinde oluşturduğumuz değişkenler bulunmaktadır\n\nHistory (Tarihçe): Kullandığımız komutlar burada saklanır. İstediğimiz zaman geriye dönebiliriz.\n\n\nPencere 3: Bu kısımda 3 farklı temel sekme bulunmaktadır:\n\n\nFiles (Dosyalar): R çalışma klasörümüzdeki dosyalar burada bulunur.\n\nPlots (Grafikler): Veri analizi sırasında oluşturacağımız grafiklerin burada görüntülenecektir\n\nHelp (Yardım): R üzerinde paket bilgilerinin görüntülendiği yer.\n\n\n\n\n\nŞekil 3.3: RStudio karşılama ekranı\n\n\n**Yanıp sönen imleç artık komutunuzu bekliyor!"
  },
  {
    "objectID": "01-kurulum/03-r-rstudio-ilk-adimlar.html#komut-satırı-üzerinde-çalışma",
    "href": "01-kurulum/03-r-rstudio-ilk-adimlar.html#komut-satırı-üzerinde-çalışma",
    "title": "3  İlk adımlar",
    "section": "\n3.3 Komut satırı üzerinde çalışma",
    "text": "3.3 Komut satırı üzerinde çalışma\nKomut satırı ekranında yanıp sönen bir imleç var. O imleç sizin komutunuzu bekliyor artık. R ile bu pencere üzerinden etkileşeceğiz. Siz bir komut yazacaksınız, R bu komutu işleyecek, ve sonucu geri döndürecek.\nEğer imleç yanıp sönmüyorsa, R o sırada bir işle uğraşıyor demektir. İşin bitmesini bekleyiniz.\nKomut satırı ekranını mesela bir hesap makinası olarak kullanabilirsiniz. Mesela:\n\n34 + 45\n\n[1] 79\n\n\nR, bu işlemi yapar ve sonucu ekrana yazdırır.\nİsterseniz başka işlemler de yapabilirsiniz:\n\n12/4\n\n[1] 3\n\n\nParantezli işlemler deneyelim:\n\n((6+5)*(12+6))/4\n\n[1] 49.5\n\n\nTebrikler! R üzerinde ilk komutlarınızı yazdınız!"
  },
  {
    "objectID": "01-kurulum/04-klasor-islemleri.html#çalışma-klasörümüz-nerede",
    "href": "01-kurulum/04-klasor-islemleri.html#çalışma-klasörümüz-nerede",
    "title": "4  Klasör İşlemleri",
    "section": "\n4.1 Çalışma klasörümüz nerede?",
    "text": "4.1 Çalışma klasörümüz nerede?\nİlk olarak getwd() komutunu konsola yazalım ve çıktıyı inceleylim:\n\ngetwd()\n\n[1] \"/home/runner/work/ybva/ybva/01-kurulum\"\n\n\nElde ettiğimiz çıktı bizim o sırada bulunduğumuz çalışma klasörünü gösterir. Bu döküman, aslında yerin bilmediğim bir sunucuda derlendi. O yüzden buradaki bilgi biraz gerçeği yansıtmıyor.\nAma kişisel MAC bilgisyarımda şöyle bir çıktı alacağım:\n/Users/quatta/Akademia/Lectures/ybva\nOfiste bulunan Windows bilgisayarımda ise şuna benzer bir çıktı alacağım:\nC:/Users/User/Akademia/Lectures/ybva\nLinux bilgisayarda ise şöyle olacaktı:\n/home/quatta/Akademia/Lectures/ybva\nBu bilgi aslında bize, o sıradaki çalışma klasörümüzün nerede olduğunu gösteriyor."
  },
  {
    "objectID": "01-kurulum/04-klasor-islemleri.html#kullanıcı-ismi",
    "href": "01-kurulum/04-klasor-islemleri.html#kullanıcı-ismi",
    "title": "4  Klasör İşlemleri",
    "section": "\n4.2 Kullanıcı ismi",
    "text": "4.2 Kullanıcı ismi\nKullanıcı ismi nedir? Kullancı ismi, her bilgisayarda bulunan ve sizin bilgilerinizin depolandığı klasördür.\nUnix (mesela macbooklar) ve Linux tabanlı işletim sistemlerinde bu konu önemlidir. Çünkü bu sistemler çok kullanıcılı olması için optimize edilmiştir.\nAncak Windows bilgisayarlarında bu konu çok anlaşılamamış bir olgudur. Genelde, bilgisayarı aldığınız yerde rastgele bir kullanıcı adı atanır.\nWindows sistemlerinde kullanıcı klasörleri C:/Users/ içerisinde bulunur.\nMac sistemlerde /Users/ içerisinde.\nLinux sistemlerde ise /home/ içinde bulunur.\nKullanıcı isminizi, bu klasörlerden sonra gelen ilk klasör olarak düşünebilirisiz.\nÖnemli nokta ise, büyük küçük harflere dikkat etmeniz. Bazı arkadaşlar C:/ ile c:/ arasındaki farkı anlamıyor. O yüzden hata alıyıorsunuz."
  },
  {
    "objectID": "01-kurulum/04-klasor-islemleri.html#çalışma-klasörü-içindekiler-nedir",
    "href": "01-kurulum/04-klasor-islemleri.html#çalışma-klasörü-içindekiler-nedir",
    "title": "4  Klasör İşlemleri",
    "section": "\n4.3 Çalışma klasörü içindekiler nedir?",
    "text": "4.3 Çalışma klasörü içindekiler nedir?\nPeki bu klasör içinde neler var? dir() fonksiyonu bu işe yarar. Klasördeki dosyaları size gösterir:\n\ndir()\n\n[1] \"01-r-rstudio-kurulum.html\"     \"01-r-rstudio-kurulum.qmd\"     \n[3] \"02-ilk-kurallar.html\"          \"02-ilk-kurallar.qmd\"          \n[5] \"03-r-rstudio-ilk-adimlar.html\" \"03-r-rstudio-ilk-adimlar.qmd\" \n[7] \"04-klasor-islemleri.qmd\"       \"04-klasor-islemleri.rmarkdown\"\n[9] \"images\""
  },
  {
    "objectID": "01-kurulum/04-klasor-islemleri.html#klasörlerde-gezinmek",
    "href": "01-kurulum/04-klasor-islemleri.html#klasörlerde-gezinmek",
    "title": "4  Klasör İşlemleri",
    "section": "\n4.4 Klasörlerde gezinmek",
    "text": "4.4 Klasörlerde gezinmek\nEğer klasörler içerisinde gezinmek istiyorsanız, her klasörü ya da belgeyi / işareti ile ayırmalısınız.\nTürkçe karakterler kullanmamaya dikkat edin.\nKlasör isimlerinde boşluk kullanmayın. Hata alma şansınız yüksek. Genel olara komut satırında çalışırken kullandığınız boşluk (space) karakteri, yazdığınız şeyin bittiği anlamına geliyor ve bilgisayar sizden yeni bir cümle yazmanınızı bekliyor.\nBu nedenle hata alabilirsiniz."
  },
  {
    "objectID": "01-kurulum/04-klasor-islemleri.html#proje-oluşturmak",
    "href": "01-kurulum/04-klasor-islemleri.html#proje-oluşturmak",
    "title": "4  Klasör İşlemleri",
    "section": "\n4.5 Proje oluşturmak",
    "text": "4.5 Proje oluşturmak\nEğer proje oluşturursanız, hayatınız daha kolaylaşır.\nProje oluşturun ve proje klasörünüzün içerisine data isimli bir klasör daha oluşturun.\nArtık verilerinizi rahatlıkla bu klasör içerisinde saklayabilirsiniz.\nProje klasörü oluştdurduğunuzda, artık güncel çalışma klasörününüz burası olarak belirlenir.\n\ngetwd()\n\n[1] \"/home/runner/work/ybva/ybva/01-kurulum\"\n\n\nBu klasör içerisinde data isimli verilerin saklandığı bir klasör daha bulunmakta. Onun içinde neler var?\n\ndir(\"data\")\n\ncharacter(0)\n\n\nArtık R içerisinde bir dosya okumak isterseniz data/sinif.txt yazarak, rahatlıkla bu dosyayı okuyabilirsiniz."
  },
  {
    "objectID": "02-veri-analizi/01-veri-bilimine-giris.html#biyolojik-veri-miktarı-hızlı-bir-şekilde-artıyor",
    "href": "02-veri-analizi/01-veri-bilimine-giris.html#biyolojik-veri-miktarı-hızlı-bir-şekilde-artıyor",
    "title": "5  Neden Veri Analizi?",
    "section": "\n5.1 Biyolojik veri miktarı hızlı bir şekilde artıyor",
    "text": "5.1 Biyolojik veri miktarı hızlı bir şekilde artıyor\nGünümüzede yaşam bilimleri alanında hızlı bir gelişme mevcut. Özellikle Yeni Nesil Dizileme Teknolojileri (Next Generation Sequencing) alanında yaşanan hızlı gelişim, kamuya açık halde paylaşılan DNA ve RNA dizileme veri miktarını inanılmaz ölçüde arttırdı (Knapp ve Hofreiter 2010).\nÖrnek vermek gerekirse, YND verisinin depolanıdğı SRA arşivindeki büyümeyi Şekil 5.1’da görebilme imkanınız var.\n\n\n\n\nŞekil 5.1: SRA veritabanındaki hızlı büyüme. Yeni nesil dizileme teknolojilerinde yaşanan hızlı gelişmeler sayesinde, SRA veritanının güncel büyüklüğü 20bin Terabaytı aşmış durumdadır (erişim tarihi 16/02/2022)\n\n\n\n\nPeki bu veri bütünlüğünün içinde neler var? Kişisel gözlemlerim neticesinde\nBu veri bütünlüğüyle çalışmak için yeni yöntemler geliştirilmesi gerekmektedir.\n\n\n\n\nKnapp, Michael, ve Michael Hofreiter. 2010. “Next Generation Sequencing of Ancient DNA: Requirements, Strategies and Perspectives”. Genes 1 (2): 227-43. https://doi.org/10.3390/genes1020227."
  },
  {
    "objectID": "02-veri-analizi/02-bilimsel-yontem.html",
    "href": "02-veri-analizi/02-bilimsel-yontem.html",
    "title": "6  Bilimsel Yöntem",
    "section": "",
    "text": "7 Veri bilimi bu işin neresinde?\nPeki bu yazılanların derslerimizle olan ilgisi nedir? Geleneksel bilimsel yöntemin işleyişi genel olarak bir önceki kısımlarda yazdığımız güzergah üzerinde hareket etmektedi. Bu da genel olarka doğa gözlemlerine dayanır.\nÖrnek vermek gerekirse; antik çağ filozofoları, gözlem yeteneklerini sadece gözlem yeteneklerini kullanarak hipotezler gerliştimiş ve dünyayı kavramamızı sağlamıştır.\nAncak, yaşam bilimlerinde yaşanan hızlı gelişme artık karşımıza farklı bir paradigma çıkarmıştır: Veri üzerinden gözlem\nBir önceki dönem Moleküler Biyoloji dersinde yaşamsal bilginin hem nasıl sonraki nesillere hem de aynı zamanda hücre içerisinde aktarıldığını gördük. Bu yaşamsal bilgi aslında sahip oldumuz bütün fenotipten sorumlu. Dolayısıyla, sahip olduğumuz fenotipik özelliklerin bir çoğunun (epigenetik özellikler dışında) kaynağı DNA."
  },
  {
    "objectID": "02-veri-analizi/02-bilimsel-yontem.html#bilimsel-araştırmaya-nasıl-başlarız",
    "href": "02-veri-analizi/02-bilimsel-yontem.html#bilimsel-araştırmaya-nasıl-başlarız",
    "title": "6  Bilimsel Yöntem",
    "section": "\n6.1 Bilimsel araştırmaya nasıl başlarız?",
    "text": "6.1 Bilimsel araştırmaya nasıl başlarız?\nKarl Popper, Bilimsel Araştırmanın Mantığı isimli kitabının birinci Almanca baskısının önsözünde şöyle yazmıştır (Popper 1984):\n\nAraştırma, deyim yerindeyse damdan düşer gibi başlar; çünkü düşecek bir “dam” vardır.\n\nDamdan düşmek terimi bence güzel bir metafor; çünkü bilimsel araştırma aslında aklımıza takılan bir soruyla başlıyor. Bu soru oldukça sezgisel - ve kişisel deneyimlerimce - nasıl olduğunu anlamadığınız bir şekilde ortaya çıkıyor. Yani bir anlamda, hiç sebep yokken bir anda kendinizi çözmeniz gereken bir soruyla baş başa buluyorsunuz - yani damdan düşüyorsunuz.\nAncak, bilimde her şeyin bir kuralı olduğu gibi, damdan düşmenin de bir kuralı var. Biz buna bilimsel araştırma yöntemi diyoruz. Genel olarak aslında bilimin çalışma prensiplerinden bir tanesi de diyebiliriz.\nPeki nasıl işliyor? Genel bir çerçeve çizmek gerekirse:\n\nGözlem\nGözlemlere dayanarak hipotez kurulması\nDeneysel metodoloji ve teorinin testi\nDeney sonucunda elde edilen bulguların tümevarmsal analizi"
  },
  {
    "objectID": "02-veri-analizi/02-bilimsel-yontem.html#gözlem",
    "href": "02-veri-analizi/02-bilimsel-yontem.html#gözlem",
    "title": "6  Bilimsel Yöntem",
    "section": "\n6.2 Gözlem",
    "text": "6.2 Gözlem\nYukarıdaki damdan düşme metaforunu ele alalım yine. Bu olay aslında uzun süreli bir gözlem sürecinin ardından bir anda ortaya çıkıyor. Yani ilk adım gözlem. Örnek verelim:\nKuğular üzerinde yaptığınız bir gözlem sonucunda, bütün kuğuların beyaz olduğunu gözlemlediniz. Bu gözlem size, dünya üzerindeki bütün kuğuların beyaz olduğunu düşünmenize sebep oldu."
  },
  {
    "objectID": "02-veri-analizi/02-bilimsel-yontem.html#gözlemlere-dayanarak-hipotez-oluşturulması",
    "href": "02-veri-analizi/02-bilimsel-yontem.html#gözlemlere-dayanarak-hipotez-oluşturulması",
    "title": "6  Bilimsel Yöntem",
    "section": "\n6.3 Gözlemlere dayanarak hipotez oluşturulması",
    "text": "6.3 Gözlemlere dayanarak hipotez oluşturulması\nGözlem sürecinin ardından, hipotez oluşturma süreci ortaya giriyor. Yine kuğu örneğinden gidersek, bu gözlem sonucunda şöyle bir hipotez oluşturdunuz: Dünya üzerindeki bütün kuğular beyazdır. Peki gerçekten öyle mi?\nArtık üçüncü adımda geçmeye hazırsınız…"
  },
  {
    "objectID": "02-veri-analizi/02-bilimsel-yontem.html#teorinin-deneysel-yöntem-ile-test-edilmesi",
    "href": "02-veri-analizi/02-bilimsel-yontem.html#teorinin-deneysel-yöntem-ile-test-edilmesi",
    "title": "6  Bilimsel Yöntem",
    "section": "\n6.4 Teorinin deneysel yöntem ile test edilmesi",
    "text": "6.4 Teorinin deneysel yöntem ile test edilmesi\nArtık bu teorinizle ilgili bir yönetm geliştirmeniz ve bu teoriniz test etmeniz gerkekir. Tabi kuğu örneği açısından bakarsak, yapmamız gereken şey aslında bir kuğu popülasyonu alarak, elinizdeki kuğuların renklerini tespit etmek. Peki burada sorulabilecek muhtemel bir soru:\n\nAcaba dünya üzerindeki bütün kuğuları tek tek inceleyerek renklerini gözlemleyebilir misiniz?\n\nNe kadar geniş bir arama yaparsanız yapın, eninde sonunda gözünüzden kaçacak bir kuğu olacaktır. Burada bilimin bize sunduğu bir kolaylık ise, dünya üzerindeki kuğu popülasyonundan rastgele örneklem ile, küçük bir alt popülasyon oluşturmaktır.\nBurada önemli olan anahtar kelimeler: örneklem ve rastgele olacaktır.\nÖrneklem olarak tanımladığımız şey esasında, büyük bir popülasyonu temsil eden küçük bir alt popülasyonu tarif edecektir. Peki neden rastgele olmalı? İstatistik biliminde rastgele tanımı gelen olarak, hiç bir yanlılık içermeyen, tamamen körlemesine yapılan iş olarak tanımlanabilir.\n\nRastgele örneklem: Geniş bir popülasyonu, yanlılık içermeden temsil eden alt popülasyon. Dolayısıyla, elde ettiğimiz alt popülasyondaki her bir örneğin bulunma frekansı, ana popülasyondaki örneklerin bulunma frekanslarına yakınsayacaktır. Bu sayede, rastgele örneklem kullanarak, daha büyük bir popülasyon hakkında yargılara varabiliriz - ya da varabileceğimizi düşünürüz.\n\nKuğu örneğine geri dönelim o zaman. Dünya üzerindeki geniş kuğu popülasyonundan rastgele bir örneklem almak isterseniz; her coğrafik bölgeden örnek aldığınıza emin olmalısınız. Mesela örnekleminizi sadece Türkiye içerisinden seçerseniz, bu yanlı bir örneklemi temsil eder. Ama popülasyonunuzu bütün ülkelerden almaya çalışırsanız, bu daha iyi bir örneklem olacaktır."
  },
  {
    "objectID": "02-veri-analizi/02-bilimsel-yontem.html#bilimin-temel-prensiplerinden-bir-tanesi-tümevarım",
    "href": "02-veri-analizi/02-bilimsel-yontem.html#bilimin-temel-prensiplerinden-bir-tanesi-tümevarım",
    "title": "6  Bilimsel Yöntem",
    "section": "\n6.5 Bilimin temel prensiplerinden bir tanesi: Tümevarım",
    "text": "6.5 Bilimin temel prensiplerinden bir tanesi: Tümevarım\nPeki bu rastgele örneklem ne işimize yarayacak? Elde ettiğimiz bu rastgele örneklem, aslında geniş kuğu popülasyonunu temsil ediyor - ya da biz şimdilik öyle kabul ediyoruz. Dolayısıyla, bu örneklem üzerinde yatpığımız deneyler sonucunda elde ettiğimzi bulguları, genel popülasyonu tanımlamak için kullanabilirz - ya da biz şimdilik öyle kabul ediyoruz.\n\nTümevarım (indüksiyon, induction) ilkesi: Özel bir önermeden, daha geniş bir sonucun çıkarılmasını tanımlaya felsefi bir ilke. Bilim özeline bu ilkeyi uygularsak, rastgele örneklem ile alınmış alt popülasyonumuzdan elde ettiğimiz önermeleri, büyük popülasyon hakkında bir yargıya varmak için kullanılması.\n\nYine kuğu popülasyonuna dönecek olursak; rastgele örneklem ile elde ettiğimiz alt popülasyonu incelediğimizi düşünelim. Bu örneklem içerisindeki kuğuların hepsi beyaz. O zaman tümevarım ilkesini kullanarak, dünya üzerindeki bütün kuğuların beyaz olduğu sonucuna varabiliriz.\n\nBu noktada bir dakika durun. Sizce bu sonuca varabilir miyiz?"
  },
  {
    "objectID": "02-veri-analizi/02-bilimsel-yontem.html#tümervarım-sorunu",
    "href": "02-veri-analizi/02-bilimsel-yontem.html#tümervarım-sorunu",
    "title": "6  Bilimsel Yöntem",
    "section": "\n6.6 Tümervarım sorunu",
    "text": "6.6 Tümervarım sorunu\nDünya üzerinde bir tane siyah kuğu olduğunu düşünün. Eğer biz bu kuğuyu, rastgele örneklem içerisinde dahil etmede başarısız olursak; bütün tümavarım çıkarımımız çöker. Çünkü artık, dünya üzerindeki kuğulardan bir tanesinin siyah olduğunu biliyoruz.\nKarl Popper, yine aynı kitabında bu sorun üzerine eğiliyor. Ne kadar iyi örneklem alırsak alalım, modern bilimin işleyişinde tümevarım ilkesini kullanmak her zaman doğru sonuçlara varacağmızı garanti etmez."
  },
  {
    "objectID": "02-veri-analizi/02-bilimsel-yontem.html#yanlışlanabilirlik-ilkesi",
    "href": "02-veri-analizi/02-bilimsel-yontem.html#yanlışlanabilirlik-ilkesi",
    "title": "6  Bilimsel Yöntem",
    "section": "\n6.7 Yanlışlanabilirlik ilkesi",
    "text": "6.7 Yanlışlanabilirlik ilkesi\nDolayısıyla, modern bilim genel olarak yanlışlanabilirlik ilkesine göre çalışır. Bu ilkeye göre, tümevarımsal çıkarımlarımız aslında belirli bir olasılık düzeyine göre doğru kabul edilir (p-değeri) ve yanlışlanana kadar doğrudur.\nYine kuğu örneğine geri dönecek olursa, bütün kuğular beyaz olarak kabul edilirken, 1967 yılında Hollanda’da bir tane siyah kuğu keşfedilmiştir. Dolayısıyla artık bütün kuğular beyaz olmadığı gösterilmiştir.\n\nYanlışlanabilirlik ilkesine göre tümevarım çıkımları, yanlışlanana kadar doğru kabul edilir."
  },
  {
    "objectID": "02-veri-analizi/02-bilimsel-yontem.html#son-yıllarda-veri-artışı-var",
    "href": "02-veri-analizi/02-bilimsel-yontem.html#son-yıllarda-veri-artışı-var",
    "title": "6  Bilimsel Yöntem",
    "section": "\n7.1 Son yıllarda veri artışı var",
    "text": "7.1 Son yıllarda veri artışı var\nYeni nesil dizileme teknolojileri, güncel veri miktarını her gün kat be kat arttırıyır. DNA dizi verisi gene olarka veri tabanlarında tutuluyor. En güncel NCBI SRA veri tabanına baktığımızda bu artışın hızını anlayabiliriz (Şekil @ref(fig:sra))\nBu veri miktarı bize yeni artık doğa yerine, veri üzerinden yeni gözlemler yapabilmemize olanak sağlıyor."
  },
  {
    "objectID": "02-veri-analizi/02-bilimsel-yontem.html#peki-veri-bilimi-nasıl-işliyor",
    "href": "02-veri-analizi/02-bilimsel-yontem.html#peki-veri-bilimi-nasıl-işliyor",
    "title": "6  Bilimsel Yöntem",
    "section": "\n7.2 Peki veri bilimi nasıl işliyor?",
    "text": "7.2 Peki veri bilimi nasıl işliyor?\nGeleneksel yöntemin aksine, artık çıkış noktamız veri. Örnek vermek gerekirse DNA, RNA dizi verisi sıklıkla kullanılan yaşam bilimi verilerindendir. Peki süreç nasıl işliyor? Şöyle özetleyebiliriz:\n\nVerinin elde edilmesi\nVeri üzerinde incelemeler ve modelleme çalışmaları yapılması\nOluşturulan modellerin, benzer veri üzerinde test edilmesi\n\nDNA veya RNA dizi versinin nasıl elde edileceğini gelecek sene Biyoinformatik dersinde daha ayrıntılı bir şekilde işleyeceğiz. Dolayısıyla, şimdilik daha çok ikinci nokta üzerinde duracağız.\n\n7.2.1 Verinin incelemesi ve modelleme çalışmaları\nBu amaçla R ve Rstudio platformlarını kullancağız. Bu platformlar bize veri analizi, görselleştirmesi ve modellenmesi konusunda harika imkanlar sağlıyor.\nİlk adımda R içerisindeki veri yapılarını öğreneceğiz. Daha sonra R içerisine veriler yükleyerek, tablolar ve grafikler oluşturacağız. Örnek vermek gerekirse, Tablo @ref(tab:mtcarstb)’da R içerisinde gelen örnek veri setlerinden bir tanesinin tablo haline getirilmiş hali mevcut.\n\nlibrary(ggplot2)\nkableExtra::kable(x = head(mtcars), format = \"latex\", caption = \"Örnek veri setinden oluşturulmuş tablo\")\n\n\n\n\nBu noktadan sonra amacımız, verinin sakladığı hikayeleri incelemek ve bu hikayeleri tanımlayan modeller oluşturmak olacak. Eğer Şekil @ref(fig:mtcars)’e bakarsanız, örnek veri setindeki iki farklı değişken kullanılarak oluşturulmuş bir modeli görebilirsiniz.\nEğer matematiksel bir notasyon kullanmak istersek, şekilde görülen çizgiyi aslında şu şekilde ifade edebiliriz:\n\\[ Y = f(X) + \\epsilon \\]\n\nggplot(data=mtcars, aes(x=drat, y=mpg)) + geom_point() + \n  xlab(\"X\") + ylab(\"Y\") + geom_smooth(method = \"lm\") + theme_bw()\n\n\n\nÖrnek veri seti kullanılarak oluşturulmuş bir doğrusal model. Bu model bize, y eksenindeki değerlerin, x eksenindeki değerlerle olan ilişkisini açıklıyor. Ya da başka bir tanımla, x eksenindeki değerleri kullanarak, y eksenindeki değerleri ne kadar doğrulukla tahmin edebiliriz?\n\n\n\n\nTabi, şu anda aklınız karışmış olabilir. Ancak ilerleyen haftalarda aşağıdaki konular üzerinden giderek R ve Rstüdyo programlarını kullanarak veri bilimine giriş yapacağız:\n\nR ve RStüdyo kurulumu\nR üzerinde bulunan temel veri yapıları\nVeri çerçevleri, matrisler, listeler\nTanımlayıcı istatistikler\nTemel istatistik analizler\nGGplot2 ile görlselleştirme\nDoğrusal modeller\n\n\n\n\n\nPopper, Karl R. 1984. Bilimsel Araştırmanın Mantığı. 8th bs. Yapı Kredi Yayınları."
  },
  {
    "objectID": "02-veri-analizi/03-r-giris.html#değişken-atama",
    "href": "02-veri-analizi/03-r-giris.html#değişken-atama",
    "title": "7  R ve Rstudio ile çalışma",
    "section": "\n7.1 Değişken atama",
    "text": "7.1 Değişken atama\nAncak, bu şekilde yaptığınız işlemler genel olarak uzun ömürlü değildir. R üzerinde genel olarak kullandığımız her şeyi bir değişken içerisinde saklarız. Bunun için atama operatörü <- kullanılmaktadır. Bu operatör, aslında okun sağındaki bilgiyi, soldaki değişkenin içerisine atamaktan sorumludur. Örnek olarak aşağıdaki işlemi yapalım:\n\nsayi1 <- 12\n\nBu işlemin sonucunda 12 değerini, sayi1 değişkeni içerisinde atamış oluyoruz. Artık, 12 kullancağımız her yerde sayi1 değişkenini kullanabiliriz.\nİsterseniz ikinci bir değişken atayalım:\n\nsayi2 <- 23\n\nArtık ikinci bir degisken elde ettik. Peki bunlarla neler yapabiliriz? Mesela dört işlem gerçekleştirebiliriz:\n\nsayi1 + sayi2\n\n[1] 35\n\n\nŞu ana kadar sadece sayılarla çalıştık. Ancak R içerisinde daha fazla veri tipi bulunmaktadır."
  },
  {
    "objectID": "02-veri-analizi/03-r-giris.html#veri-tipleri",
    "href": "02-veri-analizi/03-r-giris.html#veri-tipleri",
    "title": "7  R ve Rstudio ile çalışma",
    "section": "\n7.2 Veri tipleri",
    "text": "7.2 Veri tipleri\nR içerisinde dört temel veri tipimiz bulunmaktadır:\n\nSayı (numeric, num)\nKarakter (character, chr)\nMantıksal (logical, logi)\nKategori/faktör (factor, fac)\n\nBu veri tiplerinin hepsi, farklı veri analizi adımlarında kullanılmaktadır. Dolayısıyla, bu veri tiplerinin düzgün bir şekilde ayarlandığından emin olmalısınız.\nBir verinin tipini öğrenmek istiyorsanız, basit olarak str fonksiyonunu kullanabilirsiniz:\n\nstr(12)\n\n num 12\n\n\n\nR üzerindeki fonksiyonlar, belirli işlevleri yerine getiren kod parçaları olarak tanımlanabilir. Her fonskiyonun, parantez içerisine yazılan en az bir tane girdisi bulunmaktadır. Burada kullandığımız str fonksiyonu, parantez içerisinde belirtilen verinin tipini geri döndürmekten sorumludur.\n\nSayılar dışında neler kullanabiliriz? Karakterleri kullanabiliriz. Ancak karakterle çalışmak istiyorsanız, mutlaka tırnak işareti \" kullanmalısınız:\n\n\"karakter\"\n\n[1] \"karakter\"\n\n\nPeki bu karakterin tipine bakalım:\n\nstr(\"karakter\")\n\n chr \"karakter\"\n\n\nMantıksal değişkenler ise Evet ya da Hayır durumlarını belirleyen operatörler olarak tanımlanabilir. R içerisinde tanımlı olarak gelirler ve dört farklı şekilde ifade edebilirsiniz. Herhangi bir tırnak kullanımına ihtiyaç bulunmamaktadır:\n\n\nTRUE veya T\n\n\nFALSE veya F\n\n\nMesela bir tanesinin tipine bakalım:\n\nstr(TRUE)\n\n logi TRUE\n\n\n\nMantıksal operatörler, R içerisinde ön tanımlı olarak gelmektedir. Dolayısıyla, bu operatörleri oldukları gibi kullanabilme imkanınız bulunmaktadır.\n\nSon olarak kategori ya da faktörleri inceleyelim. Faktör değişkenleri, genel olarak gruplandırma vazifesi görmektedir. Mesela, farklı deney koşullarını faktör olarak gösterebiliriz. Bu sayede, R içerisinde bu koşullara arasındaki değişimleri inceleme imkanımız bulunmaktadır. Faktör oluşturmak için mutlaka bir karaktere ihtiyacımız bulunmaktadır. Bir faktör oluşturmak için, factor fonksiyonunu kullanmalıyız:\n\nfactor(\"karanlik\")\n\n[1] karanlik\nLevels: karanlik\n\n\nİsterseniz bir de bu faktörün tipine bakalım:\n\nstr(factor(\"karanlik\"))\n\n Factor w/ 1 level \"karanlik\": 1"
  },
  {
    "objectID": "02-veri-analizi/04-vektorler.html#vektör-oluşturma-üzerine-örnekler",
    "href": "02-veri-analizi/04-vektorler.html#vektör-oluşturma-üzerine-örnekler",
    "title": "8  Vektörler",
    "section": "\n8.1 Vektör oluşturma üzerine örnekler",
    "text": "8.1 Vektör oluşturma üzerine örnekler\nAşağıdaki tablo, hayali bir deneyi tarif etmektedir. Bir türe ait 6 bitkinin, farklı ışık koşullarında yaprak uzunlukları ölçümleri alınmıştır. Acaba, her sütundan bir vektör oluşturabilir miyiz? Bu örnek için Tablo 8.1’e bakınız.\n\n\nTablo 8.1: Hayali veri setimizdeki bitkiler\n\nBitki İsmi\nYaprak Uzunluğu (cm)\nDeney Koşulları\n\n\n\nbitki1\n2.3\nKaranlık\n\n\nbitki2\n3.4\nAydınlık\n\n\nbitki3\n4.5\nAydınlık\n\n\nbitki4\n1.2\nKaranlık\n\n\nbitki5\n3.4\nAydınlık\n\n\nbitki6\n2.5\nKaranlık\n\n\n\n\nÖncelikle bitki isimleri için bir karakter vektörü oluşturalım:\n\nbitki_ismi <- c(\"bitki1\", \"bitki2\", \"bitki3\", \"bitki4\", \"bitki5\", \"bitki6\")\n\nŞimdi ise yaprak uzunluğu için bir sayı vektörü oluşturalım:\n\nyaprak_uzunlugu <- c(2.3, 3.4, 4.5, 1.2, 3.4, 2.5)\n\nSon olarak deney koşulları için bir vektör oluşturmamız gerekli. Dikkat edin, deney koşulları aslında bir kategori ifade ediyor. Bu nedenle, deney koşulları vektörü aslında bir faktör vektörü olmalı:\n\ndeney_kosullari <- factor(c(\"karanlik\", \"aydinlik\", \"aydinlik\", \"karanlik\", \"aydinlik\", \"karanlik\"))\n\nGerçekten faktör vektörü oluşturmuş muyuz kontrol edelim:\n\nstr(deney_kosullari)\n\n Factor w/ 2 levels \"aydinlik\",\"karanlik\": 2 1 1 2 1 2\n\n\nOluşturduğumuz vektörün uzunluğunu elde etmek için ise len fonksiyonunu kullanabiliriz:\n\nlength(yaprak_uzunlugu)\n\n[1] 6"
  },
  {
    "objectID": "02-veri-analizi/04-vektorler.html#vektörlerde-indis-kullanımı",
    "href": "02-veri-analizi/04-vektorler.html#vektörlerde-indis-kullanımı",
    "title": "8  Vektörler",
    "section": "\n8.2 Vektörlerde indis kullanımı",
    "text": "8.2 Vektörlerde indis kullanımı\nPeki vektör içerisindeki elemanlara nasıl erişiriz? Bunun için indisler kullanmamız gereklidir. Mesela yukarıda oluşturduğumuz yaprak_uzunlugu vektörü üzerinde ikinci elemanı alalım:\n\nyaprak_uzunlugu[2]\n\n[1] 3.4\n\n\nŞimdi de ikinci ve dördüncü elemanlar arasındaki verileri geri döndürelim:\n\nyaprak_uzunlugu[2:4]\n\n[1] 3.4 4.5 1.2\n\n\n\n: operatörü, iki sayı arasındaki sayılardan bir vektör oluşturur:\n\n1:16\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16\n\n\n\nEğer - işareti ile eksi indis verirsek, o elemanı vektörden çıkartabiliriz:\n\nyaprak_uzunlugu[-5]\n\n[1] 2.3 3.4 4.5 1.2 2.5\n\n\n\nDikkat edin, burada yaprak_uzunlugu vektörünün beşinci elemanı doğrudan çıkartılmadı, sadece beşinci elemanı çıkartılmış bir vektör geri döndürüldü."
  },
  {
    "objectID": "02-veri-analizi/04-vektorler.html#sonuç",
    "href": "02-veri-analizi/04-vektorler.html#sonuç",
    "title": "8  Vektörler",
    "section": "\n8.3 Sonuç",
    "text": "8.3 Sonuç\nBu kısım kapsamında aşağıdaki konular önemlidir:\n\nBir vektör oluşturmak için c() fonksiyonunu kullanırız, ve vektör elemanlarını , ile ayırırız\nBir vektörün uzunluğunu öğrenmek için length() fonksiyonunu kullanırız\nVektör içinde bir ya da bir grup elemanı geri döndürmek için ise indisler kullanırız yaprak_uzunlugu[5]"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "Kaynakça",
    "section": "",
    "text": "Knapp, Michael, and Michael Hofreiter. 2010. “Next\nGeneration Sequencing of Ancient\nDNA: Requirements, Strategies and\nPerspectives.” Genes 1 (2): 227–43. https://doi.org/10.3390/genes1020227.\n\n\nPopper, Karl R. 1984. Bilimsel Araştırmanın\nMantığı. 8th ed. Yapı Kredi Yayınları."
  }
]